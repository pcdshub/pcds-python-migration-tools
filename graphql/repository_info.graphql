# Ref: https://graphql.org/learn/queries/
# Ref: https://docs.github.com/en/graphql/reference/queries

fragment repositoryInfo on RepositoryInfo {
  description
  homepageUrl
  name
  nameWithOwner
  ... on Node {
    id
  }
}

fragment deploymentProtectionRule on DeploymentProtectionRule
{
  timeout
  reviewers(first:100) {
    nodes {
      ... on Team {
        combinedSlug
      }
      ... on User {
        login
        name
      }
    }
  }
}

query showRepositoryInfo($owner:String!, $repo:String!) {
  repository(name: $repo, owner: $owner) {
    environments(first: 10) {
      nodes {
        id
        name
        protectionRules(first: 100) {
          nodes {
            ...deploymentProtectionRule
          }
        }
      }
    }
    ...repositoryInfo
  }
}

fragment repositoryPaging on RepositoryConnection {
  pageInfo {
    hasNextPage
    endCursor
  }
  totalCount
}

query listAllReposInOrg($orgLogin: String!, $endCursor: String) {
  organization(login: $orgLogin) {
    repositories(first: 100, after: $endCursor) {
      nodes {
        name
      }
      ...repositoryPaging
    }
  }
}

query allOrgRepoDirectCollaborators($orgLogin: String!, $endCursor: String) {
  organization(login: $orgLogin) {
    repositories(first: 100, after: $endCursor) {
      nodes {
        name
        isArchived
        collaborators(affiliation: DIRECT) {
          edges {
            node {
              login
            }
            permission
            permissionSources {
              permission
              source {
                __typename
                ... on Organization {
                  login
                }
                ... on Repository {
                  name
                }
                ... on Team {
                  slug
                }
              }
            }
          }
        }
      }
      ...repositoryPaging
    }
  }
}

mutation createEnvironment(
    $repositoryId:ID!,
    $name:String!,
) {
  createEnvironment(input: {
    name: $name
    repositoryId: $repositoryId
  }) {
    environment {
      id
      name
      protectionRules(first: 100) {
        nodes {
          ...deploymentProtectionRule
        }
      }
    }
  }
}
